/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Algorithms.CrypticAlgo;
import java.awt.event.ActionEvent;
import java.awt.image.BufferedImage;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.security.Security;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;


public class SimulateGUI extends javax.swing.JFrame {

   static SimulateGUI simulateGUI;
   static AnalysisGUI analysisGUI;
   String plainText;
   String technique;
   String algo_used;
   String asym[] = new String[] { "RSA", "ElGamal", "EllipticCurve"};
   String sym[] = new String[] { "BlowFish", "DES", "AES" };
   String hash[] = new String[] {"MD5", "SHA-1"};
   byte encrypted[];
   byte decrypted[];
   long sTime, eTime;
   
   Algorithms.CrypticAlgo algo;
   ApplicationContext context;
   BufferedImage graph;
   
    public SimulateGUI() {
        initComponents();
        analysisGUI = new AnalysisGUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eTimeUnit = new javax.swing.JLabel();
        encryptLabel = new javax.swing.JLabel();
        dTimeUnit = new javax.swing.JLabel();
        decryptLabel = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TextSize = new javax.swing.JTextField();
        encryptTimeLabel = new javax.swing.JLabel();
        ETime = new javax.swing.JTextField();
        decryptTimeLabel = new javax.swing.JLabel();
        DTime = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        encryptText = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        decryptText = new javax.swing.JTextArea();
        jComboBox2 = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        moduleMenu = new javax.swing.JMenu();
        simulateMenu = new javax.swing.JMenuItem();
        AnalysisMenu = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        helpMenu = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CryptoSimulator");
        setResizable(false);

        eTimeUnit.setText("ms");

        encryptLabel.setText("Cipher Text");

        dTimeUnit.setText("ms");

        decryptLabel.setText("Decrypted Text");

        jLabel2.setText(" Size of Input Text (KB)");

        TextSize.setEditable(false);
        TextSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextSizeActionPerformed(evt);
            }
        });

        encryptTimeLabel.setText("Encryption Time");

        ETime.setEditable(false);
        ETime.setText(" ");
        ETime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ETimeActionPerformed(evt);
            }
        });

        decryptTimeLabel.setText("Decrypition Time");

        DTime.setEditable(false);
        DTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DTimeActionPerformed(evt);
            }
        });

        jLabel1.setText("Plain Text");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Asymmetric", "Symmetric", "Hash", "Quantum" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton1.setText("Apply");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText(" Cryptography Technique");

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        encryptText.setEditable(false);
        encryptText.setColumns(20);
        encryptText.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        encryptText.setLineWrap(true);
        encryptText.setRows(5);
        jScrollPane2.setViewportView(encryptText);

        jLabel4.setText("Algorithm");

        decryptText.setEditable(false);
        decryptText.setColumns(20);
        decryptText.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        decryptText.setLineWrap(true);
        decryptText.setRows(5);
        jScrollPane3.setViewportView(decryptText);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "RSA", "ElGamal", "EllipticCurve" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        moduleMenu.setText("Module");

        simulateMenu.setText("Simulation");
        moduleMenu.add(simulateMenu);

        AnalysisMenu.setText("Analysis");
        AnalysisMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnalysisMenuActionPerformed(evt);
            }
        });
        moduleMenu.add(AnalysisMenu);

        jMenuBar1.add(moduleMenu);

        help.setText("Help");

        helpMenu.setText("Documentation");
        help.add(helpMenu);

        jMenuItem4.setText("Help");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        help.add(jMenuItem4);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(231, 231, 231)
                        .addComponent(encryptLabel)
                        .addGap(217, 217, 217)
                        .addComponent(decryptLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(10, 10, 10)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(TextSize, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(encryptTimeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(ETime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eTimeUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decryptTimeLabel)
                        .addGap(18, 18, 18)
                        .addComponent(DTime, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(dTimeUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(encryptLabel)
                    .addComponent(decryptLabel))
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButton2)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(TextSize, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(encryptTimeLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(ETime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(decryptTimeLabel)
                            .addComponent(eTimeUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(DTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(dTimeUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TextSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextSizeActionPerformed

    private void ETimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ETimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ETimeActionPerformed

    private void DTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DTimeActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        String item = jComboBox1.getSelectedItem().toString();
        decryptText.setText("");
        encryptText.setText("");
        decryptText.setEnabled(true);
        encryptLabel.setText("Cipher Text");
        decryptLabel.setVisible(true);
        decryptText.setVisible(true);
        decryptTimeLabel.setVisible(true);
        dTimeUnit.setVisible(true);
        DTime.setVisible(true);
        jComboBox2.setEnabled(true);
        switch(item)
        {
            case "Asymmetric":
                jComboBox2.setModel(new DefaultComboBoxModel(asym));
                break;
            case "Symmetric":
                jComboBox2.setModel(new DefaultComboBoxModel(sym));
                break;
            case "Hash":
                jComboBox2.setModel(new DefaultComboBoxModel(hash));
                encryptLabel.setText("Message Digest");
                decryptLabel.setVisible(false);
                decryptText.setEnabled(false);
                decryptText.setVisible(false);
                decryptTimeLabel.setVisible(false);
                dTimeUnit.setVisible(false);
                DTime.setVisible(false);
                break;
            default:
                jComboBox2.setEnabled(false);
        }
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       

        plainText = jTextArea1.getText();
        technique = jComboBox1.getSelectedItem().toString();
        algo_used = jComboBox2.getSelectedItem().toString();
        TextSize.setText(""+((float)plainText.length())/1024);
        
        context = new ClassPathXmlApplicationContext("spring.xml");
        algo = (CrypticAlgo)context.getBean(algo_used);
        sTime = System.currentTimeMillis();
        
        encrypted = algo.encrypt(plainText.getBytes());
        eTime = System.currentTimeMillis();
        encryptText.setText((""+javax.xml.bind.DatatypeConverter.printHexBinary(encrypted)).toLowerCase());
        ETime.setText(""+(eTime-sTime));
        sTime = System.currentTimeMillis();
        decrypted = algo.decrypt(encrypted);
        eTime = System.currentTimeMillis();
        decryptText.setText(""+new String(decrypted));
        DTime.setText(""+(eTime-sTime));
        
        //plotGraph();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
        //algo_used = jComboBox2.getSelectedItem().toString();
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void AnalysisMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnalysisMenuActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        analysisGUI.setVisible(true);
        
    }//GEN-LAST:event_AnalysisMenuActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed
    
    public void actionPerformed(ActionEvent e){
            
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        JFileChooser openTextFile = new JFileChooser();
        int returnVal;
        String line;
        
        if(evt.getSource() == jButton2){
            
            returnVal = openTextFile.showOpenDialog(simulateGUI);
            if(returnVal == JFileChooser.APPROVE_OPTION){
                File file = openTextFile.getSelectedFile();
                jTextArea1.setText("");
                try {
                    BufferedReader reader = new BufferedReader(new FileReader(file.getPath()));
                    while((line = reader.readLine()) != null){
                        jTextArea1.append(line);
                    }
                    reader.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(SimulateGUI.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(SimulateGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        
       
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SimulateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SimulateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SimulateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SimulateGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AnalysisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AnalysisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AnalysisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AnalysisGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        Security.addProvider(new BouncyCastleProvider());
        simulateGUI = new SimulateGUI();
        simulateGUI.setVisible(true);
       
        
    }
    */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AnalysisMenu;
    private javax.swing.JTextField DTime;
    private javax.swing.JTextField ETime;
    private javax.swing.JTextField TextSize;
    private javax.swing.JLabel dTimeUnit;
    private javax.swing.JLabel decryptLabel;
    private javax.swing.JTextArea decryptText;
    private javax.swing.JLabel decryptTimeLabel;
    private javax.swing.JLabel eTimeUnit;
    private javax.swing.JLabel encryptLabel;
    private javax.swing.JTextArea encryptText;
    private javax.swing.JLabel encryptTimeLabel;
    private javax.swing.JMenu help;
    private javax.swing.JMenuItem helpMenu;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JMenu moduleMenu;
    private javax.swing.JMenuItem simulateMenu;
    // End of variables declaration//GEN-END:variables
}
